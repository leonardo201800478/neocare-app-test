import { Table } from './Table';
/**
 * A schema is a collection of tables. It is used to define the structure of a database.
 */
export class Schema {
    /*
      Only available when constructing with mapped typed definition columns
    */
    types;
    props;
    tables;
    constructor(tables) {
        if (Array.isArray(tables)) {
            this.tables = tables;
        }
        else {
            this.props = tables;
            this.tables = this.convertToClassicTables(this.props);
        }
    }
    validate() {
        for (const table of this.tables) {
            table.validate();
        }
    }
    toJSON() {
        return {
            // This is required because "name" field is not present in TableV2
            tables: this.tables.map((t) => t.toJSON())
        };
    }
    convertToClassicTables(props) {
        return Object.entries(props).map(([name, table]) => {
            const convertedTable = new Table({
                name,
                columns: table.columns,
                indexes: table.indexes,
                localOnly: table.localOnly,
                insertOnly: table.insertOnly,
                viewName: table.viewNameOverride || name
            });
            return convertedTable;
        });
    }
}
//# sourceMappingURL=Schema.js.map