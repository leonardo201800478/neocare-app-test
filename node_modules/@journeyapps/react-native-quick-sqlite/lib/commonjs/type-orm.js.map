{"version":3,"names":["setupTypeORMDriver","open","openDatabase","options","ok","fail","_con","name","location","connection","executeSql","sql","params","response","execute","e","transaction","fn","writeTransaction","close","attach","dbNameToAttach","alias","callback","detach","exports"],"sources":["type-orm.ts"],"sourcesContent":["import { QueryResult, TransactionContext, Open } from './types';\n\n/**\n * DO NOT USE THIS! THIS IS MEANT FOR TYPEORM\n * If you are looking for a convenience wrapper use `connect`\n */\nexport const setupTypeORMDriver = (open: Open) => ({\n  openDatabase: (\n    options: {\n      name: string;\n      location?: string;\n    },\n    ok: (db: any) => void,\n    fail: (msg: string) => void\n  ): any => {\n    try {\n      const _con = open(options.name, { location: options.location });\n\n      const connection = {\n        executeSql: async (\n          sql: string,\n          params: any[] | undefined,\n          ok: (res: QueryResult) => void,\n          fail: (msg: string) => void\n        ) => {\n          try {\n            let response = await _con.execute(sql, params);\n            ok(response);\n          } catch (e) {\n            fail(e);\n          }\n        },\n        transaction: (fn: (tx: TransactionContext) => Promise<void>): Promise<void> => {\n          return _con.writeTransaction(fn);\n        },\n        close: (ok: any, fail: any) => {\n          try {\n            _con.close();\n            ok();\n          } catch (e) {\n            fail(e);\n          }\n        },\n        attach: (dbNameToAttach: string, alias: string, location: string | undefined, callback: () => void) => {\n          _con.attach(dbNameToAttach, alias, location);\n          callback();\n        },\n        detach: (alias, callback: () => void) => {\n          _con.detach(alias);\n          callback();\n        }\n      };\n\n      ok(connection);\n\n      return connection;\n    } catch (e) {\n      fail(e);\n    }\n  }\n});\n"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACO,MAAMA,kBAAkB,GAAIC,IAAU,KAAM;EACjDC,YAAY,EAAEA,CACZC,OAGC,EACDC,EAAqB,EACrBC,IAA2B,KACnB;IACR,IAAI;MACF,MAAMC,IAAI,GAAGL,IAAI,CAACE,OAAO,CAACI,IAAI,EAAE;QAAEC,QAAQ,EAAEL,OAAO,CAACK;MAAS,CAAC,CAAC;MAE/D,MAAMC,UAAU,GAAG;QACjBC,UAAU,EAAE,MAAAA,CACVC,GAAW,EACXC,MAAyB,EACzBR,EAA8B,EAC9BC,IAA2B,KACxB;UACH,IAAI;YACF,IAAIQ,QAAQ,GAAG,MAAMP,IAAI,CAACQ,OAAO,CAACH,GAAG,EAAEC,MAAM,CAAC;YAC9CR,EAAE,CAACS,QAAQ,CAAC;UACd,CAAC,CAAC,OAAOE,CAAC,EAAE;YACVV,IAAI,CAACU,CAAC,CAAC;UACT;QACF,CAAC;QACDC,WAAW,EAAGC,EAA6C,IAAoB;UAC7E,OAAOX,IAAI,CAACY,gBAAgB,CAACD,EAAE,CAAC;QAClC,CAAC;QACDE,KAAK,EAAEA,CAACf,EAAO,EAAEC,IAAS,KAAK;UAC7B,IAAI;YACFC,IAAI,CAACa,KAAK,CAAC,CAAC;YACZf,EAAE,CAAC,CAAC;UACN,CAAC,CAAC,OAAOW,CAAC,EAAE;YACVV,IAAI,CAACU,CAAC,CAAC;UACT;QACF,CAAC;QACDK,MAAM,EAAEA,CAACC,cAAsB,EAAEC,KAAa,EAAEd,QAA4B,EAAEe,QAAoB,KAAK;UACrGjB,IAAI,CAACc,MAAM,CAACC,cAAc,EAAEC,KAAK,EAAEd,QAAQ,CAAC;UAC5Ce,QAAQ,CAAC,CAAC;QACZ,CAAC;QACDC,MAAM,EAAEA,CAACF,KAAK,EAAEC,QAAoB,KAAK;UACvCjB,IAAI,CAACkB,MAAM,CAACF,KAAK,CAAC;UAClBC,QAAQ,CAAC,CAAC;QACZ;MACF,CAAC;MAEDnB,EAAE,CAACK,UAAU,CAAC;MAEd,OAAOA,UAAU;IACnB,CAAC,CAAC,OAAOM,CAAC,EAAE;MACVV,IAAI,CAACU,CAAC,CAAC;IACT;EACF;AACF,CAAC,CAAC;AAACU,OAAA,CAAAzB,kBAAA,GAAAA,kBAAA","ignoreList":[]}